services:
  django:
    container_name: django
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=fsadfaskldfjm;alsdkjf
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    env_file:
      - ./.env
    depends_on:
      - postgres

  react:
    container_name: react
    build:
      context: ./frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
    depends_on:
      - django
      - postgres
    networks:
      - transcendence

  postgres:
    image: postgres:16.3-alpine
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - ./.env
    
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASSWORD=root

  celery:
    image: python:3.12.3-alpine
    command: pip install celery -- celery -A backend worker -- loglevel=info
    volumes:
      - .:/backend
    depends_on:
      - postgres
      - rabbitmq

volumes:
  postgres-data:

networks:
  transcendence:
    driver: bridge
