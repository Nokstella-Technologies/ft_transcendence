# version: "3.8"

services:
  django:
    container_name: django
    build:
      context: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/usr/src/app/
    ports:
      - 8001:8000
    environment:
      - DEBUG=1
      - SECRET_KEY=fsadfaskldfjm;alsdkjf
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    env_file:
      - ./.env
    depends_on:
      - postgres
    networks:
      - transcendence

  react:
    container_name: react
    build:
      context: ./frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
    depends_on:
      - django
      - postgres
    networks:
      - transcendence

  postgres:
    image: postgres:16.3-alpine
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./.env
    networks:
      - transcendence

  Elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
    - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node    
    ports:
    - '9200:9200'
    - '9300:9300'
    networks:
      - elk

  Logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
    - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf 
    depends_on:
      - Elasticsearch
    ports:
    - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"    
    networks:
      - elk

  Kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always       
    ports:
    - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200  
    depends_on:
      - Elasticsearch  
    networks:
      - elk

volumes:
  postgres-data:
  elastic_data: {}

networks:
  transcendence:
    driver: bridge
  elk:
