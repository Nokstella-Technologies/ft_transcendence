version: "3.8"

services:
  user_service:
    container_name: user_service
    build:
      context: ./backend/user_service
    command: python3 manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend/user_service:/usr/src/app/
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - SECRET_KEY=757c082fdb2523061f228caaaa9347c2211f6f3bd93366c832bf1d94acf1eb4d
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - POSTGRES_NAME=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
    env_file:
      - ./.env
    depends_on:
      - postgres
    networks:
      - transcendence


  react:
    container_name: react
    build:
      context: ./frontend
    volumes:
      - ./frontend:/usr/src/app
    ports:
      - 3000:3000
    env_file:
      - ./frontend/.env
    depends_on:
      - postgres
    networks:
      - transcendence

  postgres:
    image: postgres:16.3-alpine
    container_name: postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./.env
    networks:
      - transcendence

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - monitoring

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    volumes:
      - elastic_data:/usr/share/elasticsearch/data/
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      discovery.type: single-node
    ports:
      - '9200:9200'
      - '9300:9300'
    networks:
      - elk
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2g

  logstash:
    image: logstash:7.16.2
    container_name: logstash
    restart: always
    volumes:
      - ./logstash/:/logstash_dir
    command: logstash -f /logstash_dir/logstash.conf
    depends_on:
      - elasticsearch
    ports:
      - '9600:9600'
    environment:
      LS_JAVA_OPTS: "-Xmx1g -Xms1g"
    networks:
      - elk
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2g

  kibana:
    image: kibana:7.16.2
    container_name: kibana
    restart: always
    ports:
      - '5601:5601'
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - elk
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2g

volumes:
  postgres-data:
  elastic_data: {}

networks:
  transcendence:
    driver: bridge
  elk:
    driver: bridge
  monitoring:
    driver: bridge

